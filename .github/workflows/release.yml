name: CI/CD

on:
  push:
    tags:
      - '*'
    # branches:
    #   - master

jobs:
  upload-release-to-github-releases:
    name: Upload release to Github Releases
    runs-on: ubuntu-latest
    needs: release-project
    steps:
      - name: Get Release url
        id: get_release
        uses: bruceadams/get-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo ${{ steps.get_release.outputs.upload_url }}

      - name: Get latest release version number
        id: get_version
        uses: battila7/get-version-action@v2

      - run: echo ${{ steps.get_version.outputs.version }}

      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: my-artifact

      - name: Archive build
        uses: thedoctor0/zip-release@master
        with:
          filename: release.zip
          exclusions: '*.git* /*node_modules/*'

      - name: Upload asset to Github Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release-v${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip

  release-project:
    name: Release build to Github Releases
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Release
        uses: anton-yurchenko/git-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT_RELEASE: 'false'
          PRE_RELEASE: 'false'
          CHANGELOG_FILE: 'CHANGELOG.md'
          ALLOW_EMPTY_CHANGELOG: 'false'
          ALLOW_TAG_PREFIX: 'false'
        # with:
        #   args: |
        #     release.zip

    # name: Release build to Github Releases
    # runs-on: ubuntu-latest
    # needs: build-project
    # steps:
    #   - name: Download build
    #     uses: actions/download-artifact@v2
    #     with:
    #       name: my-artifact
    #   - name: Archive build
    #     uses: thedoctor0/zip-release@master
    #     with:
    #       filename: release.zip
    #       exclusions: '*.git* /*node_modules/*'
    #   - name: Create Github Release
    #     id: create-new-release
    #     uses: actions/create-release@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       tag_name: v${{ github.run_number}}
    #       release_name: Release V${{ github.run_number}}
    #   - name: Upload asset to Github Release
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create-new-release.outputs.upload_url }}
    #       asset_path: ./release.zip
    #       asset_name: release-v${{ github.run_number}}.zip
    #       asset_content_type: application/zip

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install NPM dependencies
        working-directory: ./phaser
        run: npm install
      - name: Build project assets
        working-directory: ./phaser
        run: npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: phaser/dist
